@page "/MealTrackerReport"
@rendermode InteractiveServer
@using BulkCarnageIQ.Core.Carnage
@using BulkCarnageIQ.Core.Contracts
@inject IMealEntryService MealEntryService
@inject IUserProfileService UserProfileService
@inject AuthenticationStateProvider AuthProvider

<MudPopoverProvider />
<MudSnackbarProvider />
<MudDialogProvider />

<MudText Typo="Typo.h3" Class="d-flex align-items-center">
    <MudIcon Icon="@Icons.Material.Filled.CalendarMonth" Class="me-2" />
    Meal Report
</MudText>

@if (entries is null)
{
    <MudPaper Class="p-4 d-flex align-items-center">
        <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large" Class="me-2" />
        <MudText Typo="Typo.subtitle1" Class="text-muted">Loading meals...</MudText>
    </MudPaper>
}
else if (!entries.Any())
{
    <MudPaper Class="p-4">
        <MudText Typo="Typo.subtitle1" Class="text-warning">
            <MudIcon Icon="@Icons.Material.Filled.Info" Class="me-1" />
            No meals tracked yet.
        </MudText>
    </MudPaper>
}
else
{
    @foreach (var dateGroup in entries.GroupBy(e => e.Date).OrderByDescending(g => g.Key))
    {
        <MudPaper Class="p-4 mb-4" Outlined="true" Elevation="3">
            <MudText Typo="Typo.h6" Class="mt-4 mb-2">@dateGroup.Key.ToString("dddd, MMMM dd")</MudText>

            <BulkCarnageIQ.Web.Components.Carnage.TodayMacroSummary TodayMeals="dateGroup.ToList()" UserProfile="UserProfile" />
        </MudPaper>
    }
}

@code {
    private List<MealEntry>? entries;
    private UserProfile? UserProfile;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var userId = authState.User?.Identity?.Name;

        entries = await MealEntryService.GetAllAsync(userId!);

        UserProfile = await UserProfileService.GetUserProfile(userId!);
    }
}
