@page "/UserProfile"
@rendermode InteractiveServer
@using BulkCarnageIQ.Core.Carnage
@using BulkCarnageIQ.Core.Carnage.Enums
@using BulkCarnageIQ.Core.Contracts
@inject IUserProfileService UserProfileService
@inject AuthenticationStateProvider AuthProvider

<MudPopoverProvider />
<MudSnackbarProvider />
<MudDialogProvider />

<MudText Typo="Typo.h3" Class="d-flex align-items-center">
    <MudIcon Icon="@Icons.Material.Filled.PersonPinCircle" Class="me-2" />
    My Profile
</MudText>

@if (isLoading)
{
    <MudPaper Class="p-4 d-flex align-items-center">
        <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large" Class="me-2" />
        <MudText Typo="Typo.subtitle1" Class="text-muted">Loading profile...</MudText>
    </MudPaper>
}
else if (userProfile is null)
{
    <MudPaper Class="p-4">
        <MudText Typo="Typo.subtitle1" Class="text-warning">
            <MudIcon Icon="@Icons.Material.Filled.Info" Class="me-1" />
            No profile found.
        </MudText>
    </MudPaper>
}
else
{
    <EditForm Model="userProfile" OnValidSubmit="HandleSaveProfile">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <MudGrid>
            <!-- Personal Info Card -->
            <MudItem xs="12" md="6">
                <MudCard Elevation="2" Class="mb-4">
                    <MudCardHeader Style="background-color: #d9230f" Class="text-white">
                        <MudText Typo="Typo.h6" Class="d-flex align-items-center">
                            <MudIcon Icon="@Icons.Material.Filled.Person" Class="me-2" />
                            Personal Info
                        </MudText>
                    </MudCardHeader>
                    <MudCardContent>

                        <MudTextField @bind-Value="userProfile.UserName" Label="User Name" Disabled="true" Variant="Variant.Outlined" Class="mb-3" />

                        <MudNumericField @bind-Value="userProfile.Age" Label="Age" Min="1" Variant="Variant.Outlined" Class="mb-3" />

                        <MudSelect T="Sex" @bind-Value="userProfile.Sex" Label="Sex" Variant="Variant.Outlined" Class="mb-3">
                            @foreach (var sexOption in Enum.GetValues<Sex>())
                            {
                                <MudSelectItem Value="@sexOption">@sexOption</MudSelectItem>
                            }
                        </MudSelect>

                        <MudNumericField @bind-Value="userProfile.HeightInches" Label="Height (in inches)" Min="1" Variant="Variant.Outlined" Class="mb-3" />

                        <MudNumericField @bind-Value="userProfile.WeightPounds" Label="Weight (in pounds)" Min="1" Variant="Variant.Outlined" Class="mb-3" />

                        <MudSelect T="string" @bind-Value="userProfile.ActivityLevel" Label="Activity Level" Variant="Variant.Outlined" Class="mb-3">
                            <MudSelectItem Value="@("sedentary")">Sedentary</MudSelectItem>
                            <MudSelectItem Value="@("lightly active")">Lightly Active</MudSelectItem>
                            <MudSelectItem Value="@("moderately active")">Moderately Active</MudSelectItem>
                            <MudSelectItem Value="@("very active")">Very Active</MudSelectItem>
                            <MudSelectItem Value="@("super active")">Super Active</MudSelectItem>
                        </MudSelect>

                        <MudSelect T="string" @bind-Value="userProfile.GoalType" Label="Goal Type" Variant="Variant.Outlined" Class="mb-3">
                            <MudSelectItem Value="@("maintain")">Maintain weight</MudSelectItem>
                            <MudSelectItem Value="@("lose0.5")">Lose 0.5 lb/week (~250 cal deficit)</MudSelectItem>
                            <MudSelectItem Value="@("lose1")">Lose 1 lb/week (~500 cal deficit)</MudSelectItem>
                            <MudSelectItem Value="@("lose2")">Lose 2 lb/week (~1000 cal deficit)</MudSelectItem>
                            <MudSelectItem Value="@("gain0.5")">Gain 0.5 lb/week (~250 cal surplus)</MudSelectItem>
                            <MudSelectItem Value="@("gain1")">Gain 1 lb/week (~500 cal surplus)</MudSelectItem>
                        </MudSelect>

                        <MudSelect T="DietType" @bind-Value="userProfile.DietType" Label="Diet Type" Variant="Variant.Outlined" Class="mb-3">
                            @foreach (var diet in Enum.GetValues<DietType>())
                            {
                                <MudSelectItem Value="@diet">@diet</MudSelectItem>
                            }
                        </MudSelect>

                    </MudCardContent>
                </MudCard>
            </MudItem>

            <!-- Nutrition Goals Card -->
            <MudItem xs="12" md="6">
                <MudCard Elevation="2" Class="mb-4">
                    <MudCardHeader Style="background-color: #d9230f" Class="text-white">
                        <MudText Typo="Typo.h6" Class="d-flex align-items-center">
                            <MudIcon Icon="@Icons.Material.Filled.ShowChart" Class="me-2" />
                            Nutrition Goals
                        </MudText>
                    </MudCardHeader>
                    <MudCardContent>

                        <MudNumericField @bind-Value="userProfile.CalorieGoal" Label="Calories" Disabled="true" Variant="Variant.Outlined" Class="mb-3" />

                        <MudNumericField @bind-Value="userProfile.ProteinGoal" Label="Protein (g)" Disabled="true" Variant="Variant.Outlined" Class="mb-3" />

                        <MudNumericField @bind-Value="userProfile.CarbsGoal" Label="Carbs (g)" Disabled="true" Variant="Variant.Outlined" Class="mb-3" />

                        <MudNumericField @bind-Value="userProfile.FatGoal" Label="Fats (g)" Disabled="true" Variant="Variant.Outlined" Class="mb-3" />

                        <MudNumericField @bind-Value="userProfile.FiberGoal" Label="Fiber (g)" Disabled="true" Variant="Variant.Outlined" Class="mb-3" />

                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>

        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled">
            Save Changes
        </MudButton>
    </EditForm>
}

@code {
    private UserProfile? userProfile;
    private string currentUserName = string.Empty;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        currentUserName = authState.User?.Identity?.Name ?? string.Empty;

        if (!string.IsNullOrEmpty(currentUserName))
        {
            userProfile = await UserProfileService.GetUserProfile(currentUserName);

            // Optional: if goals are not calculated yet (0), calculate them
            if (userProfile is not null && userProfile.CalorieGoal == 0)
            {
                userProfile.CalculateGoals();
            }
        }

        isLoading = false;
    }

    private async Task HandleSaveProfile()
    {
        // Recalculate goals when profile is saved
        userProfile?.CalculateGoals();

        // Save the updated profile
        if (userProfile != null)
        {
            await UserProfileService.SaveUserProfile(userProfile);
        }
    }
}
