@page "/FoodList"
@rendermode InteractiveServer
@using BulkCarnageIQ.Core.Carnage
@using BulkCarnageIQ.Core.Carnage.Report
@using BulkCarnageIQ.Core.Contracts
@inject IFoodItemService FoodItemService

<PageTitle>Food List</PageTitle>

<h2 class="my-4 text-center">
    <i class="bi bi-egg-fried"></i> Food Items
</h2>

<!-- Filters Section in a Card -->
<div class="card shadow-sm mb-4">
    <div class="card-header bg-primary text-white">
        <h4 class="mb-0">
            <i class="bi bi-funnel"></i> Filters
        </h4>
    </div>
    <div class="card-body">
        <div class="d-flex flex-wrap mb-3">
            <!-- Recipe Name Dropdown -->
            <div class="me-3">
                <label for="recipeName">Recipe Name</label>
                <select class="form-select" id="recipeName" @bind="filter.SelectedRecipeName">
                    <option value="">Select Recipe</option>
                    @foreach (var recipe in recipeNames)
                    {
                        <option value="@recipe">@recipe</option>
                    }
                </select>
            </div>

            <!-- Group Name Dropdown -->
            <div class="me-3">
                <label for="groupName">Group Name</label>
                <select class="form-select" id="groupName" @bind="filter.SelectedGroupName">
                    <option value="">Select Group</option>
                    @foreach (var group in groupNames)
                    {
                        <option value="@group">@group</option>
                    }
                </select>
            </div>

            <!-- Brand Type Dropdown -->
            <div class="me-3">
                <label for="brandType">Brand Type</label>
                <select class="form-select" id="brandType" @bind="filter.SelectedBrandType">
                    <option value="">Select Brand</option>
                    @foreach (var brand in brandTypes)
                    {
                        <option value="@brand">@brand</option>
                    }
                </select>
            </div>
        </div>

        <div class="d-flex flex-wrap">
            <!-- Flags Section -->
            <div class="form-check me-3">
                <input type="checkbox" class="form-check-input" id="highProtein" @bind="filter.IsHighProtein" />
                <label class="form-check-label" for="highProtein">High Protein</label>
            </div>
            <div class="form-check me-3">
                <input type="checkbox" class="form-check-input" id="lowCarb" @bind="filter.IsLowCarb" />
                <label class="form-check-label" for="lowCarb">Low Carb</label>
            </div>
            <div class="form-check me-3">
                <input type="checkbox" class="form-check-input" id="keto" @bind="filter.IsKeto" />
                <label class="form-check-label" for="keto">Keto</label>
            </div>
            <div class="form-check me-3">
                <input type="checkbox" class="form-check-input" id="bulkMeal" @bind="filter.IsBulkMeal" />
                <label class="form-check-label" for="bulkMeal">Bulk Meal</label>
            </div>
            <div class="form-check me-3">
                <input type="checkbox" class="form-check-input" id="highCarb" @bind="filter.IsHighCarb" />
                <label class="form-check-label" for="highCarb">High Carb</label>
            </div>
            <div class="form-check me-3">
                <input type="checkbox" class="form-check-input" id="lowFiber" @bind="filter.IsLowFiber" />
                <label class="form-check-label" for="lowFiber">Low Fiber</label>
            </div>
            <div class="form-check me-3">
                <input type="checkbox" class="form-check-input" id="highFat" @bind="filter.IsHighFat" />
                <label class="form-check-label" for="highFat">High Fat</label>
            </div>
            <div class="form-check me-3">
                <input type="checkbox" class="form-check-input" id="balancedMeal" @bind="filter.IsBalancedMeal" />
                <label class="form-check-label" for="balancedMeal">Balanced Meal</label>
            </div>
            <div class="form-check me-3">
                <input type="checkbox" class="form-check-input" id="lowProtein" @bind="filter.IsLowProtein" />
                <label class="form-check-label" for="lowProtein">Low Protein</label>
            </div>
        </div>

        <div class="d-flex flex-wrap mb-3 mt-3">
            <div class="me-3">
                <button class="btn btn-sm btn-outline-secondary" @onclick="ClearFilters">
                    <i class="bi bi-x-circle"></i> Reset Filters
                </button>
            </div>
        </div>
    </div>
</div>

@if (foodItems == null)
{
    <div class="text-center my-5">
        <div class="spinner-border text-primary" role="status"></div>
    </div>
}
else if (foodItems.Count == 0)
{
    <p>No food items found.</p>
}
else
{
    var filteredItems = filter.ApplyFilters(foodItems);
    var groupedItems = filteredItems.GroupBy(item => item.GroupName ?? "Ungrouped");

    foreach (var group in groupedItems)
    {
        <div class="card shadow-lg mb-4 rounded-4 border-0">
            <div class="card-header bg-primary text-white rounded-top">
                <h4 class="mb-0">
                    <i class="bi bi-collection"></i> @group.Key
                </h4>
            </div>
            <div class="card-body">
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                    @foreach (var item in group)
                    {
                        <div class="col">
                            <div class="card h-100 shadow rounded-4 border-0">
                                @if (!string.IsNullOrEmpty(item.PictureLink))
                                {
                                    <img src="@item.PictureLink" alt="@item.RecipeName" class="card-img-top img-fluid rounded-top" style="max-height: 300px; width: 100%; height: auto; object-fit: contain;" />
                                }
                                else
                                {
                                    <img src="photos/FoodItemPlaceHolder.jpg" alt="@item.RecipeName" class="card-img-top img-fluid rounded-top" style="max-height: 300px; width: 100%; height: auto; object-fit: contain;" />
                                }

                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title d-flex justify-content-between align-items-center">
                                        @item.RecipeName
                                        <span class="badge bg-secondary">@item.BrandType</span>
                                    </h5>

                                    <p class="text-muted small mb-2">
                                        @item.Servings x @item.MeasurementServings @item.MeasurementType
                                    </p>

                                    <div class="mb-2">
                                        @if (item.IsBreakfast)
                                        {
                                            <span class="badge bg-warning text-dark me-1"><i class="bi bi-sunrise"></i> Breakfast</span>
                                        }
                                        @if (item.IsLunch)
                                        {
                                            <span class="badge bg-success text-white me-1"><i class="bi bi-box"></i> Lunch</span>
                                        }
                                        @if (item.IsDinner)
                                        {
                                            <span class="badge bg-dark text-white me-1"><i class="bi bi-moon"></i> Dinner</span>
                                        }
                                        @if (item.IsSnack)
                                        {
                                            <span class="badge bg-info text-dark me-1"><i class="bi bi-cookie"></i> Snack</span>
                                        }
                                    </div>

                                    <div class="mb-2">
                                        @if (item.IsHighProtein)
                                        {
                                            <span class="badge bg-success me-1"><i class="bi bi-fire"></i> High Protein</span>
                                        }
                                        @if (item.IsLowCarb)
                                        {
                                            <span class="badge bg-info text-dark me-1"><i class="bi bi-arrow-down-circle"></i> Low Carb</span>
                                        }
                                        @if (item.IsKeto)
                                        {
                                            <span class="badge bg-warning text-dark me-1"><i class="bi bi-droplet-half"></i> Keto</span>
                                        }
                                        @if (item.IsBulkMeal)
                                        {
                                            <span class="badge bg-danger me-1"><i class="bi bi-graph-up"></i> Bulk</span>
                                        }
                                        @if (item.IsHighCarb)
                                        {
                                            <span class="badge bg-danger text-white me-1"><i class="bi bi-cup-straw"></i> High Carb</span>
                                        }
                                        @if (item.IsLowFiber)
                                        {
                                            <span class="badge bg-secondary me-1"><i class="bi bi-flower3"></i> Low Fiber</span>
                                        }
                                        @if (item.IsHighFat)
                                        {
                                            <span class="badge bg-dark text-white me-1"><i class="bi bi-droplet"></i> High Fat</span>
                                        }
                                        @if (item.IsBalancedMeal)
                                        {
                                            <span class="badge bg-primary me-1"><i class="bi bi-lightning-charge"></i> Balanced Meal</span>
                                        }
                                        @if (item.IsLowProtein)
                                        {
                                            <span class="badge bg-info me-1"><i class="bi bi-egg"></i> Low Protein</span>
                                        }
                                    </div>

                                    <ul class="list-group list-group-flush small mb-3">
                                        <li class="list-group-item"><i class="bi bi-lightning-charge"></i> <strong>Calories:</strong> @item.CaloriesPerServing</li>
                                        <li class="list-group-item"><i class="bi bi-bar-chart-line"></i> <strong>Protein:</strong> @item.Protein g</li>
                                        <li class="list-group-item"><i class="bi bi-cup-straw"></i> <strong>Carbs:</strong> @item.Carbs g</li>
                                        <li class="list-group-item"><i class="bi bi-droplet"></i> <strong>Fats:</strong> @item.Fats g</li>
                                        <li class="list-group-item"><i class="bi bi-flower3"></i> <strong>Fiber:</strong> @item.Fiber g</li>
                                    </ul>

                                    @if (!string.IsNullOrEmpty(item.Link))
                                    {
                                        <a href="@item.Link" class="btn btn-outline-primary btn-sm mt-auto" target="_blank">
                                            <i class="bi bi-box-arrow-up-right"></i> Nutrition Info
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
}

@code {
    private List<FoodItem> foodItems;
    private List<string> recipeNames = [];
    private List<string> groupNames = [];
    private List<string> brandTypes = [];
    private FoodItemFilter filter = new FoodItemFilter();

    protected override async Task OnInitializedAsync()
    {
        // Fetch food items from service
        foodItems = await FoodItemService.GetAllAsync();

        // Get the distinct values for RecipeName, GroupName, and BrandType for the dropdowns
        recipeNames = foodItems.Select(f => f.RecipeName).Distinct().ToList();
        groupNames = foodItems.Select(f => f.GroupName ?? "Ungrouped").Distinct().ToList();
        brandTypes = foodItems.Select(f => f.BrandType).Distinct().ToList();
    }

    private void ClearFilters()
    {
        filter = new FoodItemFilter();
        StateHasChanged();
    }
}
