@using BulkCarnageIQ.Core.Carnage.Report

<MudPaper Class="p-4">
    <MudTable T="KeyValuePair<string, MacroSummary>" Items="@WeeklyData" Dense="true" Hover="true" Bordered="true">
        <HeaderContent>
            <MudTh>Day</MudTh>
            @foreach (var macro in MacroNames)
            {
                <MudTh>@macro</MudTh>
            }
        </HeaderContent>
        <RowTemplate>
            <MudTd Class="fw-bold">@context.Key</MudTd>
            @foreach (var macro in MacroNames)
            {
                var value = GetMacroValue(@context.Value, macro);
                var goal = GetGoal(macro);
                var css = GetCellClass(value, goal);

                <MudTd Class="@css">@value.ToString("N2") g / @goal.ToString("N2") g</MudTd>
            }
        </RowTemplate>
    </MudTable>
</MudPaper>

@code {
    [Parameter] public Dictionary<string, MacroSummary> WeeklyData { get; set; } = new();
    [Parameter] public float ProteinGoal { get; set; } = 120f;
    [Parameter] public float CarbsGoal { get; set; } = 220f;
    [Parameter] public float FatsGoal { get; set; } = 80f;
    [Parameter] public float FiberGoal { get; set; } = 25f;

    private readonly string[] MacroNames = ["Protein", "Carbs", "Fats", "Fiber"];

    private float GetMacroValue(MacroSummary summary, string macro) => macro switch
    {
        "Protein" => summary.Protein,
        "Carbs" => summary.Carbs,
        "Fats" => summary.Fats,
        "Fiber" => summary.Fiber,
        _ => 0f
    };

    private float GetGoal(string macro) => macro switch
    {
        "Protein" => ProteinGoal,
        "Carbs" => CarbsGoal,
        "Fats" => FatsGoal,
        "Fiber" => FiberGoal,
        _ => 0f
    };

    private string GetCellClass(float value, float goal)
    {
        var ratio = value / goal;
        if (ratio > 1.0) return "bg-danger text-white";
        if (ratio >= 0.85f) return "bg-warning";
        return "bg-success text-white";
    }
}
